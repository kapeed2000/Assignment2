use mavenmovies;
/*Basic Aggregate Functions: */

-- Q 1. Retrieve the total number of rentals made in the Sakila database.  
select count(rental_id) from rental;

-- Q 2. Find the average rental duration (in days) of movies rented from the Sakila database
select avg(rental_duration) from film;

/**************************************************************************************************/

-- String Functions:

-- Q 3. Display the first name and last name of customers in uppercase. 

select upper(first_name), upper( last_name) from customer; 


-- Q 4. Extract the month from the rental date and display it alongside the rental ID. 

select rental_id, month(rental_date) from rental;

/****************************************************************************************************/

--  GROUP BY:

-- Q 5. Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
select customer_id, count(rental_id) from rental group by customer_id;

-- Q 6. Find the total revenue generated by each store. 
select st.store_id, sum(p.amount) as total_revenue from payment p 
inner join staff sf on sf.staff_id = p.staff_id 
inner join store st on st.store_id = sf.store_id group by st.store_id;


-- Q 7. Display the title of the movie, customers first name, and last name who rented it.   
select title, first_name, last_name from film inner join inventory on film.film_id =inventory.film_id 
inner join rental on rental.inventory_id = inventory.inventory_id 
inner join customer on customer.customer_id = rental.customer_id;


-- Q 8. Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
select first_name from actor inner join film_actor on actor.actor_id = film_actor.actor_id 
inner join film on film.film_id = film_actor.film_id where title = 'Gone with the Wind';


-- Q 9. Determine the total number of rentals for each category of movies. 
select  category_id, count(rental_id) as total_rentals from film_category inner join film 
on film.film_id = film_category.film_id inner join inventory on inventory.film_id = film.film_id 
inner join rental on rental.inventory_id = inventory.inventory_id  group by category_id; 


-- Q 10. Find the average rental rate of movies in each language. 
select name, avg(rental_rate) from language inner join film 
on language.language_id = film.language_id group by name;

/***************************************************************************************************/

-- Joins:

-- Q 11. Retrieve the customer names along with the total amount they've spent on rentals. 
select concat(first_name, ' ', last_name) as Names, sum(amount) as toatal_amount from customer 
inner join payment on customer.customer_id = payment.payment_id inner join rental 
on rental.rental_id = payment.rental_id group by customer.customer_id;


-- Q 12. List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
select f.title, c.customer_id, city from film f inner join inventory iv on iv.film_id = f.film_id 
inner join rental r on r.inventory_id = iv.inventory_id 
inner join customer c on c.customer_id = r.customer_id 
inner join address ad on ad.address_id = c.address_id
inner join city ct on ct.city_id = ad.city_id
 group by c.customer_id, f.title;

/***************************************************************************************************/

-- Advanced Joins and GROUP BY: 

-- Q 13. Display the top 5 rented movies along with the number of times they've been rented. 
-- Hint: JOIN film, inventory, and rental tables,then use cOUNT() and GROUP BY, and limit the results. 
select f.title, count(r.rental_id) as total_rentals from film f 
inner join inventory iv on iv.film_id = f.film_id 
inner join rental r on r.inventory_id = iv.inventory_id 
group by f.title order by total_rentals desc limit 5;


-- Q 14. Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY. 
select c.customer_id, concat(c.first_name,' ', c.last_name) as name, st.store_id 
from customer c inner join rental r 
on r.customer_id = c.customer_id inner join inventory iv on iv.inventory_id = r.customer_id 
inner join store st on st.store_id = iv.store_id
where st.store_id  in (1,2)
group by c.customer_id, st.store_id, name
having count(distinct st.store_id);


